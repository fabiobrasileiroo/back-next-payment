import 'dotenv/config'
import type { PaymentData } from '../@types/PaymentData'
import { isProduction, payment } from '../config/mercadoPagoConfig'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// Obtain the correct webHookURL based on environment
export const webHookURL: string = isProduction
  ? (process.env.PROD_WEBHOOK_URL as string)
  : (process.env.HOMOL_WEBHOOK_URL as string)

// Service function to create a payment
export const createPayment = async (paymentData: PaymentData) => {
  try {
    // Replace this URL with the one generated by ngrok or your server URL
    const notification_url = webHookURL

    const paymentDataFinal = {
      ...paymentData,
      notification_url,
    }

    console.log('----------------------------------------------------------')
    console.log('ğŸš€ ~ createPayment ~ paymentDataFinal:', paymentDataFinal)

    const response = await payment.create({
      body: paymentDataFinal,
    })

    console.log('ğŸš€ ~ createPayment ~ response:', response)
    return response
  } catch (error: any) {
    console.error('Erro ao criar pagamento:', error)
    if (error.response) {
      console.error('Detalhes do erro:', error.response) // Log detailed error response if available
    }
    throw new Error(`Error creating payment: ${(error as Error).message}`)
  }
}


export const getPayments = async () => {
  return prisma.payment.findMany({
    // include: {
    //   // company: true,
    //   // category: true,
    // },
  })
}